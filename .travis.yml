# This file allows testing your addon using travis CI servers to use it you'll need to
# create an account in travis.org and enable your addon there. 
#
# By default it will test linux 64bit and osx against the master and stable OF branches. 
# Other platforms can be enabled by uncommenting the corresponding sections.
#
# If any extra install is needed to use the addon it can be included in the corresponding
# install script in:
#
# scripts/ci/$TARGET/install.sh
#


language: c++
compiler: gcc
sudo: true
matrix:
  include:
  # fully specify builds, include can't dynamically expand matrix entries
  # relative order of sudo and env is important so that addons: is recognized

# Linux 64bit, OF master
  - os: linux
    dist: trusty
    sudo: required
    env: TARGET="linux" OF_BRANCH="master"
    addons:
      apt:
        sources:
          - ubuntu-toolchain-r-test
        packages:
          - gcc-4.9
          - g++-4.9
          - gdb

# Linux 64bit, OF stable:  Not supported yet
#  - os: linux
#    dist: trusty
#    sudo: required
#    env: TARGET="linux" OF_BRANCH="stable"
#    addons:
#      apt:
#        sources:
#          - ubuntu-toolchain-r-test
#        packages:
#          - gcc-4.9
#          - g++-4.9
#          - gdb

# OSX, OF master
  - os: osx
    osx_image: xcode8
    compiler: clang
    env: TARGET="osx" OF_BRANCH="master"

# OSX
  - os: osx
    osx_image: xcode8
    compiler: clang
    env: TARGET="osx" OF_BRANCH="stable"

# Linux ARM6, OF master: Uncomment following lines to enable 
#  - os: linux
#    sudo: required
#    dist: trusty
#    env: TARGET="linuxarmv6l" OF_BRANCH="master"


# Linux ARM6, OF stable:  Not supported yet
#  - os: linux
#    sudo: required
#    dist: trusty
#    env: TARGET="linuxarmv6l" OF_BRANCH="stable"

# Linux ARM7, OF master: Uncomment following lines to enable 
#  - os: linux
#    sudo: false
#    env: TARGET="linuxarmv7l" OF_BRANCH="master"
#    cache:
#      directories:
#        - ~/rpi2_toolchain

# Linux ARM7, OF stable:  Not supported yet
#  - os: linux
#    sudo: false
#    env: TARGET="linuxarmv7l" OF_BRANCH="stable"
#    cache:
#      directories:
#        - ~/rpi2_toolchain


# Emscripten, OF master: Uncomment following lines to enable 
#  - os: linux
#    sudo: false
#    env: TARGET="emscripten" OF_BRANCH="master"
#    addons:
#      apt:
#        sources:
#          - ubuntu-toolchain-r-test
#        packages:
#          - libstdc++6


# Emscripten, OF stable: Uncomment following lines to enable 
#  - os: linux
#    sudo: false
#    env: TARGET="emscripten" OF_BRANCH="stable"
#    addons:
#      apt:
#        sources:
#          - ubuntu-toolchain-r-test
#        packages:
#          - libstdc++6


# iOS, OF master: Not supported yet
#  - os: osx
#    osx_image: xcode8
#    compiler: clang
#    env: TARGET="ios" OF_BRANCH="master"


# iOS, OF stable: Not supported yet
#  - os: osx
#    osx_image: xcode8
#    compiler: clang
#    env: TARGET="ios" OF_BRANCH="stable"


# tvOS, OF master: Not supported yet
#  - os: osx
#    osx_image: xcode8
#    compiler: clang
#    env: TARGET="tvos" OF_BRANCH="master"


# tvOS, OF stable: Not supported yet
#  - os: osx
#    osx_image: xcode8
#    compiler: clang
#    env: TARGET="tvos" OF_BRANCH="stable"


# Android armv7, OF master: Uncomment following lines to enable 
#  - os: linux
#    sudo: false
#    env: TARGET="android" OPT="armv7" OF_BRANCH="master"
#    cache:
#      directories:
#        - ~/android-ndk-r12b


# Android armv7, OF stable: Uncomment following lines to enable 
#  - os: linux
#    sudo: false
#    env: TARGET="android" OPT="armv7" OF_BRANCH="stable"
#    cache:
#      directories:
#        - ~/android-ndk-r12b


# Android x86, OF master: Uncomment following lines to enable 
#  - os: linux
#    sudo: false
#    env: TARGET="android" OPT="x86" OF_BRANCH="master"
#    cache:
#      directories:
#        - ~/android-ndk-r12b


# Android x86, OF stable: Uncomment following lines to enable 
#  - os: linux
#    sudo: false
#    env: TARGET="android" OPT="x86" OF_BRANCH="stable"
#    cache:
#      directories:
#        - ~/android-ndk-r12b


  # Exclude the default build that would otherwise be generated
  # see https://github.com/travis-ci/travis-ci/issues/1228
  exclude:
    - compiler: gcc

install:
  - cd ~
  - git clone --depth=1 --branch=$OF_BRANCH https://github.com/openframeworks/openFrameworks
  - cd openFrameworks
  - export OF_ROOT=$PWD
  - if [ -f scripts/ci/$TARGET/install.sh ]; then
        scripts/ci/$TARGET/install.sh;
    fi
  - if [ "$OF_BRANCH" == "master" ]; then
        if [ "$TARGET" == "linux" ]; then
            scripts/linux/download_libs.sh -a 64;
        elif [ "$TARGET" == "linuxarmv6l" ]; then
            scripts/linux/download_libs.sh -a armv6l;
        elif [ "$TARGET" == "linuxarmv7l" ]; then
            scripts/linux/download_libs.sh -a armv7l;
        elif [ "$TARGET" == "tvos" ]; then
            scripts/ios/download_libs.sh;
        else
            scripts/$TARGET/download_libs.sh;
        fi
    fi
  - if [ "$TARGET" == "linuxarmv7l" ]; then
        cd $OF_ROOT/scripts/ci/$TARGET/archlinux;
        wget http://ci.openframeworks.cc/rtaudio-armv7hf.tar.bz2;
        tar xjf rtaudio-armv7hf.tar.bz2;
        rm rtaudio-armv7hf.tar.bz2;
    fi
  - cd $TRAVIS_BUILD_DIR
  - if [ -f scripts/ci/install.sh ]; then
        scripts/ci/install.sh;
    fi
  - if [ -f scripts/ci/$TARGET/install.sh ]; then
        scripts/ci/$TARGET/install.sh;
    fi


script:
  - cd ~
  - export OF_ROOT=~/openFrameworks
  - mv $TRAVIS_BUILD_DIR ${OF_ROOT}/addons/
  - cd ${OF_ROOT}/addons/$(basename $TRAVIS_BUILD_DIR)
  - if [ "$TARGET" == "linuxarmv6l" ]; then
        export CXXFLAGS="${CXXFLAGS} -ftrack-macro-expansion=0";
        sed -i "s/PLATFORM_OPTIMIZATION_CFLAGS_DEBUG = .*/PLATFORM_OPTIMIZATION_CFLAGS_DEBUG = -g0/" ${OF_ROOT}/libs/openFrameworksCompiled/project/makefileCommon/config.linux.common.mk;
        export GCC_PREFIX=arm-linux-gnueabihf;
        export GST_VERSION=1.0;
        export RPI_ROOT=${OF_ROOT}/scripts/ci/${TARGET}/raspbian;
        export TOOLCHAIN_ROOT=${OF_ROOT}/scripts/ci/${TARGET}/rpi_toolchain;
        export PLATFORM_OS=Linux;
        export PLATFORM_ARCH=armv6l;
        export PKG_CONFIG_LIBDIR=${RPI_ROOT}/usr/lib/pkgconfig:${RPI_ROOT}/usr/lib/${GCC_PREFIX}/pkgconfig:${RPI_ROOT}/usr/share/pkgconfig;
    elif [ "$TARGET" == "linuxarmv7l" ]; then
        sed -i "s/PLATFORM_OPTIMIZATION_CFLAGS_DEBUG = .*/PLATFORM_OPTIMIZATION_CFLAGS_DEBUG = -g0/" ${OF_ROOT}/libs/openFrameworksCompiled/project/makefileCommon/config.linux.common.mk;
        export GCC_PREFIX=armv7l-unknown-linux-gnueabihf;
        export TOOLCHAIN_PREFIX=arm-linux-gnueabihf;
        export GST_VERSION=1.0;
        export RPI_ROOT=${OF_ROOT}/scripts/ci/$TARGET/archlinux;
        export TOOLCHAIN_ROOT=$HOME/rpi2_toolchain;
        export PLATFORM_OS=Linux;
        export PLATFORM_ARCH=armv7l;
        export PKG_CONFIG_DIR=;
        export PKG_CONFIG_LIBDIR=${RPI_ROOT}/usr/lib/pkgconfig:${RPI_ROOT}/usr/share/pkgconfig;
        export PKG_CONFIG_SYSROOT_DIR=${RPI_ROOT};
        export CXX=${TOOLCHAIN_ROOT}/bin/${GCC_PREFIX}-g++;
        export CC=${TOOLCHAIN_ROOT}/bin/${GCC_PREFIX}-gcc;
        export AR=${TOOLCHAIN_ROOT}/bin/${GCC_PREFIX}-ar;
        export LD=${TOOLCHAIN_ROOT}/bin/${GCC_PREFIX}-ld;
        export CFLAGS="$CFLAGS --sysroot=${RPI_ROOT}";
        export CXXFLAGS="$CXXFLAGS --sysroot=${RPI_ROOT}";
        export CXXFLAGS="${CXXFLAGS} -ftrack-macro-expansion=0";
    elif [ "$TARGET" == "emscripten" ]; then        
        sed -i "s/PLATFORM_OPTIMIZATION_CFLAGS_DEBUG = .*/PLATFORM_OPTIMIZATION_CFLAGS_DEBUG = -g0/" ${OF_ROOT}/libs/openFrameworksCompiled/project/makefileCommon/config.linux.common.mk;
        source ~/emscripten-sdk/emsdk_env.sh;
    fi
  - for example in example*; do
        cp ${OF_ROOT}/scripts/templates/$TARGET/Makefile $example/;
        cp ${OF_ROOT}/scripts/templates/$TARGET/config.make $example/;
        cd $example;
        if [ "$TARGET" == "android" ]; then
            echo "ABIS_TO_COMPILE_DEBUG = $OPT" >> config.make;
            make Debug PLATFORM_OS=Android;
            cd ..;
        elif [ "$TARGET" == "emscripten" ]; then
            emmake make Debug;
            cd ..;
        else
            make Debug;
            cd ..;
        fi
    done

git:
  depth: 10
